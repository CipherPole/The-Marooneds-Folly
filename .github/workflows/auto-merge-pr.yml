---
name: Auto-merge PR when labeled

on:
  pull_request:
    types: [labeled]

jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Check label and merge
        uses: actions/github-script@v7
        env:
          PR_TOKEN: ${{ secrets.PR_TOKEN }}
        with:
          # Provide github.token so the action has a usable token. The script
          # will prefer PR_TOKEN (PAT) when available via env to avoid using
          # secrets in YAML expressions.
          github-token: ${{ github.token }}
          script: |
            const token = process.env.PR_TOKEN || process.env.GITHUB_TOKEN;
            // Use the built-in 'github' client provided to the script for most
            // operations; octokit with explicit token can be made if needed.

            const label = context.payload.label.name;
            if (label !== 'automerge') {
              console.log('Label is not automerge; exiting.');
              return;
            }

            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const prNumber = context.payload.pull_request.number;

            const { data: mergeResult } = await github.rest.pulls.merge({
              owner,
              repo,
              pull_number: prNumber,
              merge_method: 'squash',
            });

            console.log(`Merged PR #${prNumber}: ${mergeResult.sha}`);
            return mergeResult;
