---
name: Auto-create PR for feature branches

on:
  push:
    branches:
      - 'feature/**'

jobs:
  create_pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create or update PR
        uses: actions/github-script@v7
        env:
          PR_TOKEN: ${{ secrets.PR_TOKEN }}
        with:
          # Provide github.token so the action has a usable token. The script
          # will use the provided authenticated client (github.rest) by
          # default. If a PR_TOKEN (PAT) is provided in the environment we
          # create a separate Octokit instance authenticated with it.
          github-token: ${{ github.token }}
          script: |
            // Use the action-provided client by default (already authenticated
            // with the token passed via 'github-token'). This avoids requiring
            // external modules in most cases.
            const client = github;

            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const head = context.ref.replace('refs/heads/', '');
            const base = 'main';
            const title = `Auto PR from ${head}`;
            const body = `This pull request was automatically created from branch **${head}**.`;

            // If caller provided a PR_TOKEN (PAT), prefer it by creating a
            // new Octokit instance authenticated with that token. This is an
            // opt-in behavior (PR_TOKEN must be set in repository secrets).
            let oct = client;
            if (process.env.PR_TOKEN) {
              const { Octokit } = require('@octokit/rest');
              oct = new Octokit({ auth: process.env.PR_TOKEN });
            }

            // Check for an existing open PR from this branch
            const existing = await oct.pulls.list({
              owner,
              repo,
              head: `${owner}:${head}`,
              base,
              state: 'open',
            });

            if (existing.data && existing.data.length > 0) {
              console.log(`Found existing PR: ${existing.data[0].html_url}`);
              return existing.data[0].html_url;
            }

            const pr = await oct.pulls.create({
              owner,
              repo,
              head,
              base,
              title,
              body,
            });

            console.log(`Created PR: ${pr.data.html_url}`);
            return pr.data.html_url;
